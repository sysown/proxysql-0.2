name: CI-3p-mysql-connector-j

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      trigger:
        type: string
      testtree:
        type: string
      infradb:
        type: string
      connector:
        type: string

env:
  TESTTREE: ${{ inputs.testtree || 'main' }}
  TESTNAME: mysql-connector-j
  TESTDIST: debian12
  SHA: ${{ inputs.trigger && fromJson(inputs.trigger).event.workflow_run.head_sha || github.sha }}
  BRANCH: ${{ inputs.trigger && fromJson(inputs.trigger).event.workflow_run.head_branch || github.ref_name }}

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
#        infradb: [ 'mysql57', 'mysql80', 'mysql84', 'mysql90', 'mariadb10.5', 'mariadb10.6', 'mariadb10.11', 'mariadb11.2', 'mariadb11.4', 'mariadb11.5' ]
#        infradb: [ 'mysql57', 'mysql80', 'mysql81', 'mysql82', 'mariadb10', 'mariadb11' ]
        infradb: ${{ fromJson( inputs.infradb ) }}
#        connector: [ '8.0.33' ]
        connector: ${{ fromJson( inputs.connector ) }}
    env:
      INFRADB: ${{ matrix.infradb }}
      CONNECTOR: ${{ matrix.connector }}
      BLDCACHE: ${{ inputs.trigger && fromJson(inputs.trigger).event.workflow_run.head_sha || github.sha }}_debian12_bin
      MATRIX: '(${{ matrix.infradb }},${{ matrix.connector }})'

    steps:
        
    - uses: LouisBrunner/checks-action@v2.0.0
      id: checks
      if: always()
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: '${{ github.workflow }} / ${{ github.job }} ${{ env.MATRIX }}'
        repo: ${{ github.repository }}
        sha: ${{ env.SHA }}
        status: 'in_progress'
#        action_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        details_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
    
    - name: Checkout proxysql_3p_testing
      uses: actions/checkout@v4
      with:
        repository: 'proxysql/proxysql_3p_testing'
        ref: ${{ env.TESTTREE }}
        fetch-depth: 1
        path: 'proxysql_3p_testing'
        token: ${{ secrets.GH_TOKEN_PROXYSQL }}
        sparse-checkout: |
          common
          libs
          infra-docker-hoster
          test_mysql-connector-j
#          proxysql

#    - name: Wait for cache
#      if: ${{ env.BRANCH != 'none' }}
#      env:
#        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: |
#        echo "Wating for cache '${BLDCACHE}' ..."
#        sleep $(( $RANDOM / 1024 ))
#        PROBE="$(gh cache list --limit 300 --repo ${{ github.repository }} | grep -i ${BLDCACHE} || echo '')"
#        while [[ -z ${PROBE} ]]; do
#          echo "Wating for cache '${BLDCACHE}' ..."
#          sleep 30
#          PROBE="$(gh cache list --limit 300 --repo ${{ github.repository }} | grep -i ${BLDCACHE} || echo '')"
#        done
#        echo "Cache available '${BLDCACHE}'"

    - name: Cache restore bin
      if: ${{ env.BRANCH != 'none' }}
      uses: actions/cache/restore@v4
      with:
        key: ${{ env.BLDCACHE }}
        fail-on-cache-miss: true
        path: |
          proxysql/.git/
          proxysql/binaries/
        
    - name: Prepare
      run: |
        set +e
        
        cd proxysql_3p_testing/
        ./setup.sh test_mysql-connector-j/mysql-connector-j
        git switch ${{ env.TESTTREE }}
        git config user.email "GH-Actions@proxysql.com"
        git config user.name "GH-Actions"
        git rebase main -f -s recursive -X theirs
        
        # use cached build
        rm -rf ./proxysql && mv ../proxysql . || true
        
        # extend timout
        cd test_mysql-connector-j
        sed -i 's/timeout -v -s1 800 //' run-tests.bash
        
    - name: Run tests
      run: |
        set +e
        
        cd proxysql_3p_testing/test_mysql-connector-j
        ./run-tests.bash
        RC=$?
        
        #sudo chmod -R 777 ${{ github.workspace }}/*
        exit $RC
        
    - name: Check baseline
      run: |
        set +e
        cd proxysql_3p_testing/test_mysql-connector-j

        GHUSER="$(id -u):$(id -g)"
        sudo chown -R ${GHUSER} ./logs
        cat ./logs/*_summary.log || true
        FAILS=$(cat ./logs/*_summary.log | grep -oP '(?<=^FAIL: )\d+')
        
        exit ${FAILS:-x}
    
    - name: Archive artifacts logs
      if: ${{ failure() && !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.workflow }}-${{ env.SHA }}-${{ matrix.infradb }}-${{ matrix.connector }}-logs-run#${{ github.run_number }}
        path: |
          proxysql_3p_testing/test_mysql-connector-j/logs
          
    - uses: LouisBrunner/checks-action@v2.0.0
      if: always()
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        check_id: ${{ steps.checks.outputs.check_id }}
        repo: ${{ github.repository }}
        sha: ${{ env.SHA }}
        conclusion: ${{ job.status }}
#        action_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        details_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
